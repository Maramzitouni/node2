const en = {
  less: "less than a minute read",
  default: "min read"
};
const fr = {
  less: `moins d'une minute de lecture`,
  default: "min de lecture"
};
const es = {
  less: `menos de un minuto leyendo`,
  default: "min de lectura"
};
const cn = {
  less: "\u5C0F\u4E8E\u4E00\u5206\u949F",
  default: "\u5206\u949F"
};
const ja = {
  less: "1\u5206\u672A\u6E80\u306E\u8AAD\u307F\u53D6\u308A",
  default: "\u6700\u5C0F\u8AAD\u307F\u53D6\u308A"
};
const translations = {
  en,
  fr,
  es,
  cn,
  ja
};
const parseWords = (data) => {
  var _a;
  return (_a = data.match(/[\w\d\s,.\u00C0-\u024F]+/giu)) !== null && _a !== void 0 ? _a : [];
};
const parseChineseWords = (data) => {
  var _a;
  return (_a = data.match(/[\u4E00-\u9FA5]/gu)) !== null && _a !== void 0 ? _a : [];
};
const parseJapaneseWords = (data) => {
  var _a;
  return (_a = data.match(/[\u3041-\u3096]/gu)) !== null && _a !== void 0 ? _a : [];
};
const getNumberOfWords = (data) => parseWords(data).reduce((accumulator, word) => accumulator + (!word.trim().length ? 0 : word.trim().split(/\s+/u).length), 0) + parseChineseWords(data).length + parseJapaneseWords(data).length;
const isLessThanAMinute = (minutes) => minutes < 1 + Number.EPSILON;
const getLocale = (minutes, locale = "en") => translations[locale][isLessThanAMinute(minutes) ? "less" : "default"];
const readingTime = (data, wordsPerMinute = 300, language = "en") => {
  const words = getNumberOfWords(data !== null && data !== void 0 ? data : "");
  const minutes = +Math.round(words / wordsPerMinute).toFixed(2);
  return {
    minutes,
    words,
    text: `${isLessThanAMinute(minutes) ? "" : minutes} ${getLocale(minutes, language)}`.trimStart()
  };
};
export { readingTime };
